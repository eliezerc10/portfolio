{"ast":null,"code":"var _jsxFileName = \"C:\\\\PersonalProjects\\\\portfolio\\\\src\\\\components\\\\navbar\\\\Navbar.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../navbar/navbar.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Navbar = ({\n  links\n}) => {\n  _s();\n  const [scroll, setScroll] = useState(true);\n  const {\n    hash\n  } = useLocation();\n  const isActive = iHash => hash === iHash;\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      setScroll(window.scrollY < 50);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: scroll ? 'navbar-nav' : 'navbar-nav scroll-navbar',\n    children: links.map(link => /*#__PURE__*/_jsxDEV(Link, {\n      className: \"prevent-select active-class\",\n      style: isActive(link.url) ? {\n        color: \"red\"\n      } : {},\n      to: link.url,\n      children: link.text\n    }, link.url, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Navbar, \"VaJ+ynOnYZbCa4HgSfRBJnQaA+M=\", false, function () {\n  return [useLocation];\n});\n_c = Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["useState","useEffect","Link","useLocation","jsxDEV","_jsxDEV","Navbar","links","_s","scroll","setScroll","hash","isActive","iHash","window","addEventListener","scrollY","className","children","map","link","style","url","color","to","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/PersonalProjects/portfolio/src/components/navbar/Navbar.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport '../navbar/navbar.css'\r\nimport { HashLink } from 'react-router-hash-link'\r\nimport { Link, NavLink, useLocation } from 'react-router-dom'\r\ninterface NavbarProps {\r\n    links: {\r\n        text: string\r\n        url: string\r\n    }[]\r\n}\r\n\r\nexport const Navbar: React.FC<NavbarProps> = ({ links }) => {\r\n    \r\n    const [scroll, setScroll] = useState(true);\r\n    const { hash } = useLocation();\r\n    const isActive = (iHash: string) => hash === iHash;\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            setScroll(window.scrollY < 50);\r\n        });\r\n    }, []);\r\n    \r\n    \r\n    return(\r\n        <nav className={scroll ? 'navbar-nav' : 'navbar-nav scroll-navbar'}>\r\n            {links.map((link: any) =>\r\n                <Link className='prevent-select active-class' style={\r\n                    isActive(link.url)\r\n                      ? {\r\n                          color: \"red\"\r\n                        }\r\n                      : {}\r\n                  } key={link.url} to={link.url}>{link.text}</Link>\r\n            )}\r\n        </nav>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,sBAAsB;AAE7B,SAASC,IAAI,EAAWC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQ7D,OAAO,MAAMC,MAA6B,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAExD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM;IAAEW;EAAK,CAAC,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAIC,KAAa,IAAKF,IAAI,KAAKE,KAAK;EAElDZ,SAAS,CAAC,MAAM;IACZa,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAM;MACpCL,SAAS,CAACI,MAAM,CAACE,OAAO,GAAG,EAAE,CAAC;IAClC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIX,OAAA;IAAKY,SAAS,EAAER,MAAM,GAAG,YAAY,GAAG,0BAA2B;IAAAS,QAAA,EAC9DX,KAAK,CAACY,GAAG,CAAEC,IAAS,iBACjBf,OAAA,CAACH,IAAI;MAACe,SAAS,EAAC,6BAA6B;MAACI,KAAK,EAC/CT,QAAQ,CAACQ,IAAI,CAACE,GAAG,CAAC,GACd;QACEC,KAAK,EAAE;MACT,CAAC,GACD,CAAC,CACN;MAAgBC,EAAE,EAAEJ,IAAI,CAACE,GAAI;MAAAJ,QAAA,EAAEE,IAAI,CAACK;IAAI,GAAlCL,IAAI,CAACE,GAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiC,CACtD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAArB,EAAA,CA1BYF,MAA6B;EAAA,QAGrBH,WAAW;AAAA;AAAA2B,EAAA,GAHnBxB,MAA6B;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}