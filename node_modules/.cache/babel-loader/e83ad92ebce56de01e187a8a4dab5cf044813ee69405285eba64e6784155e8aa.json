{"ast":null,"code":"var _jsxFileName = \"C:\\\\PersonalProjects\\\\portfolio\\\\src\\\\components\\\\experience\\\\Experience.tsx\";\nimport '../experience/experience.css';\nimport { Element } from \"react-scroll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Experience = ({\n  experiences\n}) => {\n  return /*#__PURE__*/_jsxDEV(Element, {\n    className: \"experience-container\",\n    name: \"experience\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Experience\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: experiences.map(experience => /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"experience-article\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pointer\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: experience.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vertical-line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"role-title\",\n              children: experience.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"company-title\",\n              children: experience.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: experience.achievements.map(achievement => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: achievement\n              }, achievement, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this)]\n        }, experience.index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["Element","jsxDEV","_jsxDEV","Experience","experiences","className","name","children","fileName","_jsxFileName","lineNumber","columnNumber","map","experience","year","role","company","achievements","achievement","index","_c","$RefreshReg$"],"sources":["C:/PersonalProjects/portfolio/src/components/experience/Experience.tsx"],"sourcesContent":["import '../experience/experience.css'\r\nimport { Element } from \"react-scroll\"\r\n\r\ninterface ExperienceProps {\r\n    experiences : {\r\n        year: number,\r\n        company: string,\r\n        role: string,\r\n        techStack: string[]\r\n        achievements: string[]\r\n    }[]\r\n}\r\n\r\nexport const Experience: React.FC<ExperienceProps> = ({ experiences }) => {\r\n    return (\r\n        <Element  className='experience-container' name=\"experience\">\r\n            <section className=\"\">\r\n                <h1>Experience</h1>\r\n                <div >\r\n                    { experiences.map((experience: any) =>\r\n                        <article className='experience-article' key={experience.index}>\r\n                            <div className=\"pointer\">\r\n                                <span>{experience.year}</span>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"circle\"></div>\r\n                                <div className=\"vertical-line\"></div>\r\n                            </div>\r\n                            <div>\r\n                                <h3 className='role-title'>{ experience.role }</h3>\r\n                                <h4 className='company-title'>{ experience.company }</h4>\r\n                                <ul>\r\n                                    {experience.achievements.map((achievement:any) => (\r\n                                    <li key={achievement}>{achievement}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                            \r\n                        </article>\r\n                    )}  \r\n                </div>\r\n            </section>\r\n        </Element>\r\n    )\r\n}"],"mappings":";AAAA,OAAO,8BAA8B;AACrC,SAASA,OAAO,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAYtC,OAAO,MAAMC,UAAqC,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EACtE,oBACIF,OAAA,CAACF,OAAO;IAAEK,SAAS,EAAC,sBAAsB;IAACC,IAAI,EAAC,YAAY;IAAAC,QAAA,eACxDL,OAAA;MAASG,SAAS,EAAC,EAAE;MAAAE,QAAA,gBACjBL,OAAA;QAAAK,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBT,OAAA;QAAAK,QAAA,EACMH,WAAW,CAACQ,GAAG,CAAEC,UAAe,iBAC9BX,OAAA;UAASG,SAAS,EAAC,oBAAoB;UAAAE,QAAA,gBACnCL,OAAA;YAAKG,SAAS,EAAC,SAAS;YAAAE,QAAA,eACpBL,OAAA;cAAAK,QAAA,EAAOM,UAAU,CAACC;YAAI;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACNT,OAAA;YAAAK,QAAA,gBACIL,OAAA;cAAKG,SAAS,EAAC;YAAQ;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC9BT,OAAA;cAAKG,SAAS,EAAC;YAAe;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,eACNT,OAAA;YAAAK,QAAA,gBACIL,OAAA;cAAIG,SAAS,EAAC,YAAY;cAAAE,QAAA,EAAGM,UAAU,CAACE;YAAI;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACnDT,OAAA;cAAIG,SAAS,EAAC,eAAe;cAAAE,QAAA,EAAGM,UAAU,CAACG;YAAO;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACzDT,OAAA;cAAAK,QAAA,EACKM,UAAU,CAACI,YAAY,CAACL,GAAG,CAAEM,WAAe,iBAC7ChB,OAAA;gBAAAK,QAAA,EAAuBW;cAAW,GAAzBA,WAAW;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAmB,CACtC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA,GAhBmCE,UAAU,CAACM,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBpD,CACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAElB,CAAC;AAAAS,EAAA,GA/BYjB,UAAqC;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}